// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TGBotCSharp;

namespace TGBotCSharp.Migrations
{
    [DbContext(typeof(TranslatorContext))]
    [Migration("20210330235741_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("TGBotCSharp.Lang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FriendlyTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LangCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Langs");
                });

            modelBuilder.Entity("TGBotCSharp.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SrcLangId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToLangId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SrcLangId");

                    b.HasIndex("ToLangId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TGBotCSharp.User", b =>
                {
                    b.HasOne("TGBotCSharp.Lang", "SrcLang")
                        .WithMany()
                        .HasForeignKey("SrcLangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TGBotCSharp.Lang", "ToLang")
                        .WithMany()
                        .HasForeignKey("ToLangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SrcLang");

                    b.Navigation("ToLang");
                });
#pragma warning restore 612, 618
        }
    }
}
